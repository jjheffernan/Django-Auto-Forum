"""
Django settings for forum_base project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import user_profile.apps

BASE_DIR = Path(__file__).resolve().parent.parent
# os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''
# SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # For local debugging
# DEBUG = (os.environ.get('DEBUG_VALUE') == 'True')  # For deployment on Heroku
# Allowed Host URLs

ALLOWED_HOSTS = []
# djangoapp.herokuapp.com

# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # django packages,
    'storages',
    # 'django-heroku',
    # app config init
    # 'user_profile.apps.UserProfileConfig',
    # 'blog.apps.BlogConfig',
    'projects',
    'user_profile',
    'blog',
    'discuss_forum',
    'test_page',
    # ext. packages,
    'crispy_forms',
    'hitcount',
    'taggit',
    'tinymce',
    # '',

]
# List of project specific apps
# test_page. Debugging tool used to stage applications
# make new app (manage.py) module for Class views of Projects (projects)
# views and models can be imported via external module
# more to come


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'forum_base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["forum_base/templates/"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'discuss_forum.context_processors.SearchFunction',
            ],
        },
    },
]

WSGI_APPLICATION = 'forum_base.wsgi.application'  # web service gate interface


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# migrate to postgresql for production

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Crispy?
CRISPY_TEMPLATE_PACK = 'boostrap4'

# email server hosting information. Need to expand upon
# https://docs.djangoproject.com/en/4.1/ref/settings/#std-setting-EMAIL_HOST

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'  # try 'smtp.gmail.com' or godaddy
EMAIL_PORT = 1025  # try 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS')
# required for password reset forms

# AWS S3 Server Information
# (add link here to django or AWS docs)

AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')  # NEVER EVER EVER HARDCODE THESE
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')  # NEVEREVER PUT THIS IN SCRIPT
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')

AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None

# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# Redirect urls
# https://docs.djangoproject.com/en/4.1/ref/settings/#std-setting-LOGIN_REDIRECT_URL

# LOGIN
LOGIN_REDIRECT_URL = '/profile/dashboard/'  # should redirect to profile page
LOGIN_URL = 'login'

# LOGOUT
LOGOUT_REDIRECT_URL = '/'  # redirects to home page

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
